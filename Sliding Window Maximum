vector<int> Solution::slidingMaximum(const vector<int> &A, int B)
{
    priority_queue<int> p1,p2;
    int n=A.size(),j=0;
    vector<int> v;
    if(B>=n)
    {
        int t=INT_MIN;
        for(int i=0;i<n;i++)
        t=max(t,A[i]);
        v.push_back(t);
        return v;
    }
    for(int i=0;i<B;i++)
    p1.push(A[i]);
    v.push_back(p1.top());
    for(int i=B;i<n;i++)
    {
        p1.push(A[i]);
        p2.push(A[j]); j++;
        while(p1.size() && p2.size() && p1.top()==p2.top())
        {
            p1.pop(); p2.pop();
        }
        if(p1.size())
        v.push_back(p1.top());
    }
    return v;
}
